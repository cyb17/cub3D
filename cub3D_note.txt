-----------------------------------------------------------------------------------------------------------------------
PARSING : verification pb de configuration

1- un seul argv valide -> fichier de description .cub si non error parameter not valid.
2- si la description du map n'est pas en dernier dans le fichier = error wrong map position in description file.
3- verification infos texture, sol/plafond :
	l'identifiant ne peut etre utilise qu'une seule fois.
	seule une seule info qui suit l'identifiant.
4- verification map :
	1-map non ferme = error map not closed
	2-contenu du map tout autres que 0,1,N,S,E,W = error content not valid.

-les infos dans le fichier (sauf le map) de description peuvent etre separees par des espaces ou par des lignes vides
c'est a nous de les gerer.
----------------------------------------------------------------------------------------------------------------------
AFFICHAGE: 

-Ray-Casting pour les murs et Sprites pour les items et objets.

-le joueur : la position x et y 
			 la direction du regard
			 le champ de vision (FOV)
			 la distance ecran <-> joueur

-hauteur ecran / distance ecran = hauteur mur / distance mur .
	=> hauteur ecran (hauteur percue) = distance ecran * (hauteur mur / distance mur).

-generalement : regard du joueur = moitie hauteur mur.
	=> regard du joueur  = [hauteur regard - (hauteur percue / 2), hauteur regard + (hauteur percue / 2)].
	=>plafond = pixels situe au-dessus du regard joueur, sol = pixels situe en-dessous du regard joueur.

-pour trouver la distance mur au bord du regard.
il faut lancer un rayon avec :	la direction du regard
						 		l'angle du champ de vision
						 		la resolution horizontale de l'ecran(nb de colonnes de pixels)
ensuite il faut :	 la position du joueur
					 l'intersection entre la ligne et le mur le plus proche
enfin trouver la distance mur avec theoreme Pythagore : 
	distance carre = (position.x - intersection.x)carre + (position.y - intersection.y)carre

-Pour éliminer le rendu en œil de poisson,distance mur au bord du regard(d1) doit donner
l'impression d'avoir la même longueur que distance mur au centre du regard(d2).
on sait : cos a = d2 / d1
	=> d2 = d1 * cos a

-un rayon lance correspond a une colonne de pixels a mettre a l'echelle et a colorer.
-la scene est coloree colonne par colonne.
